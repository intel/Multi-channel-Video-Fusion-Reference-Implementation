From e362bf71f1cfa4b11d651da248dabc39c2633ef0 Mon Sep 17 00:00:00 2001
From: Tong Wu <tong1.wu@intel.com>
Date: Sun, 27 Feb 2022 09:37:21 +0800
Subject: [PATCH 1/3] avutil/hwcontext_d3d11va: add a format check for staging
 texture

The texDesc.Format needs to be filled in with a corresponding format. I
add a format check to initialize the format in case sometimes the
ctx->internal->priv is not initialized, such as during the hwmap
process.

For example, for sample command line: ffmpeg.exe -hwaccel qsv -c:v h264_qsv
-i input.264 -vf "hwmap=derive_device=d3d11va:extra_hw_frames=16,format=d3d11,hwdownload,format=nv12"
-f rawvideo -y ./output.yuv

When deriving from qsv, the ctx->internal->priv remains uninitialized,
causing CreateTexture2D failure.

Note: this fix only solves this particular issue and does not make the
sample command line work immediately. See the other patches in the patchset
which fix this qsv->d3d11va command line.

Signed-off-by: Tong Wu <tong1.wu@intel.com>
---
 libavutil/hwcontext_d3d11va.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/libavutil/hwcontext_d3d11va.c b/libavutil/hwcontext_d3d11va.c
index 8ab96bad25..f69fb3fc9c 100644
--- a/libavutil/hwcontext_d3d11va.c
+++ b/libavutil/hwcontext_d3d11va.c
@@ -344,6 +344,8 @@ static int d3d11va_create_staging_texture(AVHWFramesContext *ctx)
     AVD3D11VADeviceContext *device_hwctx = ctx->device_ctx->hwctx;
     D3D11VAFramesContext              *s = ctx->internal->priv;
     HRESULT hr;
+    int i;
+
     D3D11_TEXTURE2D_DESC texDesc = {
         .Width          = ctx->width,
         .Height         = ctx->height,
@@ -355,6 +357,20 @@ static int d3d11va_create_staging_texture(AVHWFramesContext *ctx)
         .CPUAccessFlags = D3D11_CPU_ACCESS_READ | D3D11_CPU_ACCESS_WRITE,
     };
 
+    if (!texDesc.Format) {
+        for (i = 0; i < FF_ARRAY_ELEMS(supported_formats); i++) {
+            if (ctx->sw_format == supported_formats[i].pix_fmt) {
+                texDesc.Format = supported_formats[i].d3d_format;
+                break;
+            }
+        }
+        if (i == FF_ARRAY_ELEMS(supported_formats)) {
+            av_log(ctx, AV_LOG_ERROR, "Unsupported pixel format: %s\n",
+                av_get_pix_fmt_name(ctx->sw_format));
+            return AVERROR(EINVAL);
+        }
+    }
+
     hr = ID3D11Device_CreateTexture2D(device_hwctx->device, &texDesc, NULL, &s->staging_texture);
     if (FAILED(hr)) {
         av_log(ctx, AV_LOG_ERROR, "Could not create the staging texture (%lx)\n", (long)hr);
-- 
2.32.0

